////////////////////////////////////////////
///// 		PORTFOLIO - 2 COLUMNS
///////////////////////////////////////////////

// for portfolio.pug
// for portfolio.html

section#portfolio2col {
	background: $portfolioColourBack;
	@include sectionPadding041515(7%,7%);
	h2 {
		text-align: center;
		font-size: $portfolioFontSizeHeader;
		text-transform: uppercase;
	}
	p {
		text-align: center;
		font-size: $portfolioFontSize;
		color: $portfolioColour;
	}
	div.portfolioGallery {
		width: 100%;
		@include flexboxSettings041715a;
		margin-top: 3%;
	}
}

// PORTFOLIO UNIT  ------------------------------------------------
section#portfolio2col section.portfolioUnit {

	// FLEX CHILD PROPERTIES  ------------------------------------------------
	// if I don't apply flex: 1 then the portfolio blocks align themselves in thirds all by themselves
	// applying @include column(4) also didn't work either
	// flex: 1;
	
	// FLEXBOX
	// what if I set the spacing using flex for child... flex: 1 auto for the unit?
	// use flexbox to make this double column
	// flex: 1 0 auto;
	flex: 1 0 48%;
	// subtract double the margin from the width
	// width: 48%;
	margin-right: 2%;
	

	// // END FLEX CHILD PROPERTIES ------------------------------------------------

	margin-bottom: 3%;
	
	// FLEXBOX  ------------------------------------------------
	// I've got to flexbox the portfolioUnit because when I use jQuery the .imgShaderBox, img and .imgShaderScreen1 don't resize properly and stretch across the page... if img is set to max-width 100% or something similar
	// using the row version is a bit of a fix
	// @include flexboxSettings041715a;

	// using the column version is a bit of a fix
	@include flexboxSettings042215a;
	justify-content: space-between;
	align-content: space-between;
	align-items: space-between;

	// // END FLEXBOX ------------------------------------------------
	
	.imgShaderBox {
		// flex child
		flex: 1 0 auto;

		position: relative;
		// max-width: 100%;
		& img {
			// width: 100%;
			max-width: 100%;
		}
	}

	.imgShaderScreen1 {
		position: absolute;
		
		top:0;
		bottom:0;
		right:0;
		left:0;
		background: $portfolioColourShaderBack;
		@include flexboxSettings041715a;
		display: none;
		// you would use jQuery to enable display:flex which should make it appear

		span.fa {
			font-size: $portfolioShaderIconSize;
			color: $portfolioColourShader;
		}
	}

	.meta {
		// flex child
		flex: 1 0 auto;

		margin: 0;
		padding: 0;

		// flexbox
		@include flexboxSettings041715a;
		// align-items:baseline;
		
		a {
			font-size: $portfolioFontSize;
			color: $portfolioColour;
		}
	}

	.meta div.metatags {
		// @include column(10);
		// align-self: flex-start;
		margin: 0;
		padding: 0;
		margin-top: 5%;
		// @include flexboxSettings042215a;
		// justify-content: flex-start;
		// align-items: flex-start;
		
		@include flexboxSettings042215a;
		justify-content: flex-start;
		align-items: flex-start;

		// width: auto;

		// using padding on this one sort of corrects the squishing of div.metatags and div.favourites
		// padding-right: 70%;

		.title {
			color: $portfolioColour2;
			display: block;
		}
		.category {
			margin-top: 1.5%;
			display: block;
		}
	}

	.meta div.favourites {
		// @include column(2);
		// I want this .favourites text at the end
		// align-self: flex-end;
		margin: 0;
		padding: 0;
		// @include flexboxSettings042215a;
		// justify-content: flex-end;
		// align-items: flex-end;
		
		// @include flexboxSettings041715a;
		// justify-content: flex-end;
		// align-items: flex-end;

		// width: auto;
		// text-align: right;

		// link
		a.favourites {
			&::before {
				@include beforeAfterIconPlace042215a('\f08a');
				margin:0px 5px 0px 0px;
				font-size: $portfolioFontSize;
				color: $portfolioColour;
			}
		}
	}
}
// // END PORTFOLIO UNIT ------------------------------------------------



// PORTFOLIO NAVIGATION  ------------------------------------------------
ul.portfolioNavigation1 {

	// flexbox
	@include flexboxSettings041715a;
	justify-content: flex-start;
	align-content: flex-start;


	li {
		// flex: 1 auto;
		width: auto;
		font-size: $portfolioNavFontSize;
		color: $portfolioNavFontColourList;
	}

	li:first-child {
		margin-right: 1.5%;
	}

	li a {
		// placing the flex: 1 auto on the a works as well and the spacing isn't as much... even though I didn't apply flexbox to the parent <li>
		// flex: 1 auto;
		font-size: $portfolioNavFontSize;
		color: $portfolioNavFontColourLink;
		// margin: 0 2% 0 2%;
		// padding: 1% 2% 1% 2%;
		padding: 4%;
		// background: blue;
		margin-right: 20%;
		@include transitionEffectAllEaseOut(0.4s);
		&:hover {
			color: $portfolioNavFontColourHover;
		}
	}

	// you must count the ul as n=0
	li:nth-child(2) a {
		//- use jQuery to change CSS such that when a link is clicked its colour changes... when you click another button all the colours reset
		// the "All" link should have the default portfolio nav hover colour
		margin-right: 51%;
		// background: blue;
		color: $portfolioNavFontColourHover;
	}

	li:nth-child(5) a, li:nth-child(6) a, li:nth-child(7) a, li:nth-child(8) a {
		margin-right: 39%;
		// background: red;
	}

	// a:first-child {
	// 	margin-right: 33%;
	// }
}
// // END PORTFOLIO NAVIGATION ------------------------------------------------



/////////////////////////////////////////////